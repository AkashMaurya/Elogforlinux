# Generated by Django 5.1.4 on 2025-09-02 07:39

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('admin_section', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='StudentLogFormModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('patient_id', models.CharField(blank=True, max_length=4)),
                ('patient_age', models.CharField(blank=True, max_length=3, null=True)),
                ('patient_gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10, null=True)),
                ('description', models.TextField(blank=True)),
                ('participation_type', models.CharField(choices=[('Observed', 'Observed'), ('Assisted', 'Assisted')], max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_reviewed', models.BooleanField(default=False)),
                ('review_date', models.DateTimeField(blank=True, null=True)),
                ('reviewer_comments', models.TextField(blank=True)),
                ('review_deadline', models.DateTimeField(blank=True, help_text='Deadline by which the doctor must review this log', null=True)),
                ('activity_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_section.activitytype')),
                ('core_diagnosis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='log_forms', to='admin_section.corediaprosession')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_section.department')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_section.group')),
                ('log_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_section.logyear')),
                ('log_year_section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_section.logyearsection')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='log_forms', to='accounts.student')),
                ('training_site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_section.trainingsite')),
                ('tutor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supervised_logs', to='accounts.doctor')),
            ],
            options={
                'verbose_name': 'Student Log Form',
                'verbose_name_plural': 'Student Log Forms',
                'ordering': ['-date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StudentNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('log_entry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='student_section.studentlogformmodel')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='accounts.student')),
            ],
            options={
                'verbose_name': 'Student Notification',
                'verbose_name_plural': 'Student Notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SupportTicket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('solved', 'Solved')], default='pending', max_length=20)),
                ('admin_comments', models.TextField(blank=True)),
                ('resolved_date', models.DateTimeField(blank=True, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='support_tickets', to='accounts.student')),
            ],
            options={
                'verbose_name': 'Support Ticket',
                'verbose_name_plural': 'Support Tickets',
                'ordering': ['-date_created'],
            },
        ),
    ]
